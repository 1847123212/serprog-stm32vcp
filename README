serprog-STM32VCP:
flashrom serprog programmer based on STM32F103(C8T6) MCU and ACM protocol.

===============================
*** Advantages ***
> Fast:       With ARM Cortex-M3 CPU @ 90DMIPS & on-chip USB 2.0 Full-Speed controller,
              serprog-STM32VCP is faster than many commercial CH341A-based USB programmer.
              Benchmark data can be found in file PERFORMANCE.
> Convenient: Built-in Virtual COM Port emulation, no USB-to-UART bridge needed.
              Fully compatible with flashrom serprog protocol version 0x01.
> Stable:     Main program is fully polled, not interrupt-driven. No physical UART means
              no baud rate and interference trouble. Natural 3.3V operation voltage.
> Affordable: STM32F103C8T6 cost only ~$1.5 and its minimized develop board usually cost
              less than $6 in China (MCU, USB and status LED included).

Ironically, you will still have to buy or borrow a USB-to-UART bridge (non-RS-232) to
program the programmer itself.

===============================
*** Installation ***
1. Download following software if you do not have them
   > flashrom, of course
     svn co svn://flashrom.org/flashrom/trunk flashrom
     Or simply: sudo apt-get install flashrom
   > summon-arm-toolchain
     git clone git://github.com/esden/summon-arm-toolchain.git
     Edit summon-arm-toolchain, turn on LIBSTM32_EN and turn off LIBOPENCM3_EN, then run it.
     If you have already got an arm-none-eabi toolchain with libstm32, you may skip this.
   > stm32flash
     svn co http://stm32flash.googlecode.com/svn/trunk/ stm32flash
     Make and install.
2. Modify the Makefile if needed.
   > Point TOOLCHAIN to the right path. If toolchain path is in the $PATH variable, simply
     leave the "arm-none-eabi-" string here.
3. Compile.
   > Simply type: make
4. Program.
   > Look at your STM32F103 board, find BOOT0 or ISP switch, put it into high or enabled,
     then connect you board's UART to your computer with the USB-to-UART bridge, apply
     power to your board, then type: make program
5. Done!
   > Throw the USB-to-UART bridge away and enjoy. Remeber to pull BOOT0 low then reset the
     board.
===============================
*** Usage ***
1. To read a flash chip:
   > Connect an 25 type SPI Flash to your board according to the file SCHEMATICS.
   > Connect your board to your PC via USB.
   > Type: flashrom -p serprog:dev=/dev/ttyACM0:4000000 -r file-to-save.bin
   > Some times flashrom will ask you to choose a chip, add something like: -c SST25VF040B
2. To erase a flash chip:
   > Erase is automatically done when writing. However, if you simply want an empty chip,
     you will need to erase manually.
   > Type: flashrom -p serprog:dev=/dev/ttyACM0:4000000 -E
   > For certain chips like MX25L6445E, first pass could fail, but if you do a second pass,
     all things will be alright. Seems like the first block needs more delay to be erased.
3. To write a flash chip:
   > Type: flashrom -p serprog:dev=/dev/ttyACM0:4000000 -w file-to-load.bin
   > Images are verified after writing. The whole process can cost a few minutes.
===============================
*** Problems? ***
1. Check your wirings and flashrom version. Do not forget to power the flash chip itself.
2. If you are sure it is caused by something wrong in the programmer's firmware, please
   file a ticket.
